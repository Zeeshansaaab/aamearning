{"version":3,"file":"star-rating.es.js","sources":["../src/ShaplaStarRating.vue"],"sourcesContent":["<template>\n  <div class=\"star-rating\" :class=\"{'is-static': isStatic}\">\n    <label\n      v-for=\"rating in ratings\"\n      :key=\"rating\"\n      class=\"star-rating__label\"\n      :class=\"getLabelClass(rating)\"\n      :style=\"getStyle(rating)\"\n      @click=\"emitEvent(rating)\"\n      @mouseover=\"star_over(rating)\"\n      @mouseout=\"star_out\"\n    >\n      <input type=\"radio\" class=\"star-rating__radio\">\n      <span class=\"star-rating__star-full\" v-if=\"isFullStar(rating)\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n          <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"/>\n          <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        </svg>\n      </span>\n      <span class=\"star-rating__star-half\" v-else-if=\"isHalfStar(rating)\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 24 24\">\n          <defs><path id=\"a\" d=\"M0 0h24v24H0V0z\"/></defs>\n          <clipPath id=\"b\"><use xlink:href=\"#a\" overflow=\"visible\"/></clipPath>\n          <path clip-path=\"url(#b)\"\n                d=\"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4V6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\"/>\n        </svg>\n      </span>\n      <span class=\"star-rating__star\" v-else>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n          <path\n            d=\"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\"/>\n          <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n        </svg>\n      </span>\n    </label>\n  </div>\n</template>\n\n<script>\nimport {computed, onMounted, reactive, toRefs} from \"vue\";\n\nexport default {\n  name: \"ShaplaStarRating\",\n  props: {\n    modelValue: {type: [String, Number], default: null},\n    isStatic: {type: Boolean, default: false},\n    color: {type: String, default: ''},\n    activeColor: {type: String, default: ''},\n    ratings: {type: Array, default: () => [1, 2, 3, 4, 5]},\n  },\n  emits: ['update:modelValue'],\n  setup(props, {emit}) {\n    const state = reactive({temp_value: ''})\n\n    onMounted(() => {\n      state.temp_value = props.modelValue;\n    })\n\n    const get_rating = computed(() => {\n      if (state.temp_value != null) {\n        return parseFloat(state.temp_value);\n      }\n      if (state.temp_value == null && props.modelValue != null) {\n        return parseFloat(props.modelValue);\n      }\n      return 0;\n    })\n\n    const isFullStar = (rating) => get_rating.value >= rating\n    const isHalfStar = (rating) => get_rating.value < rating && get_rating.value > (parseInt(rating) - 0.6);\n    const getLabelClass = (rating) => {\n      return {\n        'is-active': isFullStar(rating) || isHalfStar(rating)\n      }\n    }\n    const star_over = (index) => {\n      if (!props.isStatic) state.temp_value = index;\n    }\n\n    const star_out = () => {\n      if (!props.isStatic) state.temp_value = props.modelValue;\n    }\n\n    const emitEvent = (value) => {\n      if (!props.isStatic) {\n        state.temp_value = value;\n        emit('update:modelValue', value);\n      }\n    }\n\n    const getStyle = (rating) => {\n      if (!(props.activeColor.length && props.color.length)) {\n        return {};\n      }\n      if (isFullStar(rating) || isHalfStar(rating)) {\n        return {color: props.activeColor}\n      }\n      return {color: props.color}\n    }\n\n    return {isFullStar, isHalfStar, getLabelClass, star_over, star_out, emitEvent, getStyle}\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"index\";\n</style>\n"],"names":["name","props","modelValue","type","String","Number","default","isStatic","Boolean","color","activeColor","ratings","Array","emits","[object Object]","emit","state","reactive","temp_value","get_rating","computed","parseFloat","isFullStar","rating","value","isHalfStar","parseInt","getLabelClass","is-active","star_over","index","star_out","emitEvent","getStyle","length","_hoisted_1","key","xmlns","d","xmlns:xlink","id","xlink:href","clip-path","class","style","$setup","onClick","onMouseover"],"mappings":"2IA0CK,SACHA,KAAM,mBACNC,MAAO,CACLC,WAAY,CAACC,KAAM,CAACC,OAAQC,QAASC,QAAS,MAC9CC,SAAU,CAACJ,KAAMK,QAASF,SAAS,GACnCG,MAAO,CAACN,KAAMC,OAAQE,QAAS,IAC/BI,YAAa,CAACP,KAAMC,OAAQE,QAAS,IACrCK,QAAS,CAACR,KAAMS,MAAON,QAAS,IAAM,CAAC,EAAG,EAAG,EAAG,EAAG,KAErDO,MAAO,CAAC,qBACRC,MAAMb,GAAOc,KAACA,UACNC,EAAQC,EAAS,CAACC,WAAY,QAE1B,OACFA,WAAajB,EAAMC,oBAGrBiB,EAAaC,GAAS,IACF,MAApBJ,EAAME,WACDG,WAAWL,EAAME,YAEF,MAApBF,EAAME,YAA0C,MAApBjB,EAAMC,WAC7BmB,WAAWpB,EAAMC,YAEnB,IAGHoB,EAAcC,GAAWJ,EAAWK,OAASD,EAC7CE,EAAcF,GAAWJ,EAAWK,MAAQD,GAAUJ,EAAWK,MAASE,SAASH,GAAU,SA+B5F,CAACD,WAAAA,EAAYG,WAAAA,EAAYE,cA9BTJ,IACd,CACLK,YAAaN,EAAWC,IAAWE,EAAWF,KA4BHM,UAzB5BC,IACZ7B,EAAMM,aAAgBW,WAAaY,IAwBgBC,SArBzC,KACV9B,EAAMM,aAAgBW,WAAajB,EAAMC,aAoBoB8B,UAjBjDR,IACZvB,EAAMM,aACHW,WAAaM,IACd,oBAAqBA,KAciDS,SAV7DV,KACJb,YAAYwB,QAAUjC,EAAMQ,MAAMyB,OAG1CZ,EAAWC,IAAWE,EAAWF,GAC5B,CAACd,MAAOR,EAAMS,aAEhB,CAACD,MAAOR,EAAMQ,OALZ,MAjFE0B,aAAShC,qDACdiC,IAAK,6CAC+BC,MAAO,6DACrBC,kCAEa,iHAAbA,wCAGtBF,IAAK,6CAC+BC,mCAA2CE,4FAC9DC,+DACmBC,mDAEhCC,6LAGJN,IAAK,wCAC+BC,MAAO,qDAGR,yNAAbC,yLA3B5BF,IAAKb,EAEJoB,MAAO,0CACPC,MAAKC,cACLC,0BACAC,4GAGDxB;;;;;;"}